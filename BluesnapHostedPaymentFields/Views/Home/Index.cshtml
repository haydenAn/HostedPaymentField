@{
	ViewData["Title"] = "Home Page";
	string _token = ViewData["Token"].ToString();
}

<script type="text/javascript" src="https://sandbox.bluesnap.com/web-sdk/4/bluesnap.js"></script>

<style>
	.paymentform{
		max-width:800px;
	}
	.setUpBS{
		margin-top:20px;
		border-radius:5px;
		border:none;
		padding:10px;
		margin-bottom: 30px;
	}
	.paymentform{
		padding:20px;
	}
	.trow{
		margin-left:15px;
	}
	.pledge{
		 background-color:whitesmoke;
		 padding:15px;
	}
	.token {
		word-wrap: break-word;
		color:chocolate;
		margin-top:15px;
	}
	.pa{
		margin:0;
		padding:0;
	}
	.paynow{
		color:white;
	}
</style>
<script>
	//Run the following command after Document Object Model (DOM) is fully loaded

	var bsObj = {
		token: "@_token"
		, onFieldEventHandler: {
	  /*OPTIONAL*/ setupComplete: function () {
				console.warn("setupComplete");
			},
	  /*OPTIONAL*/ threeDsChallengeExecuted: function () {
				console.warn("threeDsChallengeExecuted");
			},
			// tagId returns: "ccn", "cvv", "exp"
			onFocus: function (tagId) { }, // Handle focus
			onBlur: function (tagId) { }, // Handle blur
			onError: function (tagId, errorCode /*, errorDescription*/) { }, // Handle a change in validation
			/*errorCode returns:
					"10" --> invalidCcNumber, invalidExpDate, invalidCvv Dependent on the tagId;
					"22013" --> "CC type is not supported by the merchant";
					"14040" --> " Token is expired";
					"14041" --> " Could not find token";
					"14042" --> " Token is not associated with a payment method, please verify your client integration or contact BlueSnap support";
					"400" --> "Session expired please refresh page to continue";
					"403", "404", "500" --> "Internal server error please try again later";
				*/

			/* errorDescription is optional. Returns BlueSnap's standard error description */

			onType: function (tagId, cardType, cardData) {
				/* cardType will give card type, and only applies to ccn: AMEX, VISA, MASTERCARD, AMEX, DISCOVER, DINERS, JCB */
				if (null != cardData) {
					/* cardData is an optional parameter which will provide ccType, last4Digits, issuingCountry, isRegulatedCard, cardSubType, binCategory and ccBin details (only applies to ccn) in a JsonObject */
					console.log(cardData);
				}
			},
			onEnter: function (tagId) { }, // Will trigger when shopper presses enter while inside one of the inputs

			onValid: function (tagId) { } // Handle a change in validation
		},
		/* example:
			  style: {
			  "Selector": {
			  "Property": "Value",
			  "Property2": "Value2"
			  },
			  "Selector2": {
			  "Property": "Value"
			  }
		  }, */
		style: {
			":focus": {
				//style for all input elements on focus event
				color: "orange"
			},
			input: {
				//style for all input elements
				color: "blue"
			},
			".invalid": {
				//style for all input elements when invalid
				color: "red"
			}
		},
		ccnPlaceHolder: "1234 5678 9012 3456", //for example
		cvvPlaceHolder: "123", //for example
		expPlaceHolder: "MM/YY", //for example
	};

		function setUpBS() {
			console.log("got triggered ")
			console.log(bsObj,bsObj.token);
		bluesnap.hostedPaymentFieldsCreate(bsObj);
	}


	function do_when_clicking_submit_button() {
		bluesnap.hostedPaymentFieldsSubmitData(function (callback) {
			if (null != callback.cardData) {
				var fraudSessionId = callback.transactionFraudInfo.fraudSessionId;

				console.log('card type: ' + callback.cardData.ccType +
					', last 4 digits: ' + callback.cardData.last4Digits +
					', exp: ' + callback.cardData.exp +
					', issuing Country: ' + callback.cardData.issuingCountry +
					', isRegulatedCard: ' + callback.cardData.isRegulatedCard +
					', cardSubType: ' + callback.cardData.cardSubType +
					', binCategory: ' + callback.cardData.binCategory +
					', ccBin: ' + callback.cardData.ccBin +
					' and fraudSessionId: ' + fraudSessionId +
					', after that I can call final submit');
				// submit the form
				window.location.assign("https://localhost:44305/BSPayment");
			} else {
				var errorArray = callback.error;
				for (i in errorArray) {
					console.log("Received error: tagId= " +
						errorArray[i].tagId + ", errorCode= " +
						errorArray[i].errorCode + ", errorDescription= " +
						errorArray[i].errorDescription);
				}
			}
		});
	}

</script>
<div class="column paymentform">
	<div class="pledge">
		<h3>Pledge CC/Payment Demo Process</h3>

		<p class="pa">POST request https://sandbox.bluesnap.com/services/2/payment-fields-tokens has been sent</p>
		<p class="pa"> token will show up below if HTTP response is successful</p>
		<p class="token">@ViewData["token"]</p>
	</div>

	<button class="btn-success border-white setUpBS" onclick="setUpBS()"> set Up hosted Payment fields</button>
	<div class="panel panel-default bootstrap-basic">
		<form class="panel-body" id="checkout-form" action="#">
			<div class="row">
				<div class="form-group col-md-12">
					<label for="cardholder-name">Name on Card</label>
					<input type="text" class="form-control" id="cardholder-name" placeholder="Full Name">
					<span class="helper-text"></span>
				</div>
				<!--Hosted Field for CC number-->
				<div class="form-group col-md-12">
					<label for="card-number">Card Number</label>
					<div class="input-group">
						<div class="form-control" id="card-number" data-bluesnap="ccn"></div>
						<div id="card-logo" class="input-group-addon"><img src="https://files.readme.io/d1a25b4-generic-card.png" height="20px"></div>
					</div>
					<span class="helper-text" id="ccn-help"></span>
				</div>
				<!--Hosted Field for CC EXP-->
				<div class="form-group col-xs-7 trow">
					<label for="exp-date">Exp. Date</label>
					<div class="form-control" id="exp-date" data-bluesnap="exp"></div>
					<span class="helper-text" id="exp-help"></span>
				</div>
				<!--Hosted Field for CC CVV-->
				<div class="form-group col-xs-5 trow">
					<label for="cvv">Security Code</label>
					<div class="form-control" id="cvv" data-bluesnap="cvv"></div>
					<span class="helper-text" id='cvv-help'></span>
				</div>
			</div>

			<a class="btn btn-success btn-lg col-xs-6 col-xs-offset-3 paynow" type="button" id="submit-button" onclick="do_when_clicking_submit_button()">Pay Now</a>

		</form>

	</div>
</div>
