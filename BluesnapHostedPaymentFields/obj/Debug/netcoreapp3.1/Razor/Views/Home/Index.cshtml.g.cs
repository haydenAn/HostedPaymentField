#pragma checksum "D:\Hayden\DayStar\HostedPaymentField\BluesnapHostedPaymentFields\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ae2b916393a87dd98e14f948625908bb587fa94e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Hayden\DayStar\HostedPaymentField\BluesnapHostedPaymentFields\Views\_ViewImports.cshtml"
using BluesnapHostedPaymentFields;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Hayden\DayStar\HostedPaymentField\BluesnapHostedPaymentFields\Views\_ViewImports.cshtml"
using BluesnapHostedPaymentFields.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ae2b916393a87dd98e14f948625908bb587fa94e", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e6aee151e92bbd379fb5d4a228cc7ad9a3389900", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("panel-body"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("checkout-form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("#"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Hayden\DayStar\HostedPaymentField\BluesnapHostedPaymentFields\Views\Home\Index.cshtml"
  
	ViewData["Title"] = "Home Page";
	string _token = ViewData["Token"].ToString();

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script type=""text/javascript"" src=""https://sandbox.bluesnap.com/web-sdk/4/bluesnap.js""></script>

<style>
	.paymentform{
		max-width:800px;
	}
</style>
<script>
	//Run the following command after Document Object Model (DOM) is fully loaded

	var bsObj = {
		token: """);
#nullable restore
#line 17 "D:\Hayden\DayStar\HostedPaymentField\BluesnapHostedPaymentFields\Views\Home\Index.cshtml"
           Write(_token);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"""
		, onFieldEventHandler: {
	  /*OPTIONAL*/ setupComplete: function () {
				console.warn(""setupComplete"");
			},
	  /*OPTIONAL*/ threeDsChallengeExecuted: function () {
				console.warn(""threeDsChallengeExecuted"");
			},
			// tagId returns: ""ccn"", ""cvv"", ""exp""
			onFocus: function (tagId) { }, // Handle focus
			onBlur: function (tagId) { }, // Handle blur
			onError: function (tagId, errorCode /*, errorDescription*/) { }, // Handle a change in validation
			/*errorCode returns:
					""10"" --> invalidCcNumber, invalidExpDate, invalidCvv Dependent on the tagId;
					""22013"" --> ""CC type is not supported by the merchant"";
					""14040"" --> "" Token is expired"";
					""14041"" --> "" Could not find token"";
					""14042"" --> "" Token is not associated with a payment method, please verify your client integration or contact BlueSnap support"";
					""400"" --> ""Session expired please refresh page to continue"";
					""403"", ""404"", ""500"" --> ""Internal server error please try again later"";
				*/

			/* e");
            WriteLiteral(@"rrorDescription is optional. Returns BlueSnap's standard error description */

			onType: function (tagId, cardType, cardData) {
				/* cardType will give card type, and only applies to ccn: AMEX, VISA, MASTERCARD, AMEX, DISCOVER, DINERS, JCB */
				if (null != cardData) {
					/* cardData is an optional parameter which will provide ccType, last4Digits, issuingCountry, isRegulatedCard, cardSubType, binCategory and ccBin details (only applies to ccn) in a JsonObject */
					console.log(cardData);
				}
			},
			onEnter: function (tagId) { }, // Will trigger when shopper presses enter while inside one of the inputs

			onValid: function (tagId) { } // Handle a change in validation
		},
		/* example:
			  style: {
			  ""Selector"": {
			  ""Property"": ""Value"",
			  ""Property2"": ""Value2""
			  },
			  ""Selector2"": {
			  ""Property"": ""Value""
			  }
		  }, */
		style: {
			"":focus"": {
				//style for all input elements on focus event
				color: ""orange""
			},
			input: {
				//style for al");
            WriteLiteral(@"l input elements
				color: ""blue""
			},
			"".invalid"": {
				//style for all input elements when invalid
				color: ""red""
			}
		},
		ccnPlaceHolder: ""1234 5678 9012 3456"", //for example
		cvvPlaceHolder: ""123"", //for example
		expPlaceHolder: ""MM/YY"", //for example
	};

		function setUpBS() {
			console.log(""got triggered "")
			console.log(bsObj,bsObj.token);
		bluesnap.hostedPaymentFieldsCreate(bsObj);
	}


	function do_when_clicking_submit_button() {
		bluesnap.hostedPaymentFieldsSubmitData(function (callback) {
			if (null != callback.cardData) {
				var fraudSessionId = callback.transactionFraudInfo.fraudSessionId;

				console.log('card type: ' + callback.cardData.ccType +
					', last 4 digits: ' + callback.cardData.last4Digits +
					', exp: ' + callback.cardData.exp +
					', issuing Country: ' + callback.cardData.issuingCountry +
					', isRegulatedCard: ' + callback.cardData.isRegulatedCard +
					', cardSubType: ' + callback.cardData.cardSubType +
					', binCategor");
            WriteLiteral(@"y: ' + callback.cardData.binCategory +
					', ccBin: ' + callback.cardData.ccBin +
					' and fraudSessionId: ' + fraudSessionId +
					', after that I can call final submit');
				// submit the form
				window.location.assign(""https://localhost:44305/BSPayment"");
			} else {
				var errorArray = callback.error;
				for (i in errorArray) {
					console.log(""Received error: tagId= "" +
						errorArray[i].tagId + "", errorCode= "" +
						errorArray[i].errorCode + "", errorDescription= "" +
						errorArray[i].errorDescription);
				}
			}
		});
	}

</script>
<div class=""column paymentform"">
	<button class=""btn-success border-white"" onclick=""setUpBS()""> set Up hosted Payment fields</button>
	<div class=""panel panel-default bootstrap-basic"">
		");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ae2b916393a87dd98e14f948625908bb587fa94e9116", async() => {
                WriteLiteral(@"
			<div class=""row"">
				<div class=""form-group col-md-12"">
					<label for=""cardholder-name"">Name on Card</label>
					<input type=""text"" class=""form-control"" id=""cardholder-name"" placeholder=""Full Name"">
					<span class=""helper-text""></span>
				</div>
				<!--Hosted Field for CC number-->
				<div class=""form-group col-md-12"">
					<label for=""card-number"">Card Number</label>
					<div class=""input-group"">
						<div class=""form-control"" id=""card-number"" data-bluesnap=""ccn""></div>
						<div id=""card-logo"" class=""input-group-addon""><img src=""https://files.readme.io/d1a25b4-generic-card.png"" height=""20px""></div>
					</div>
					<span class=""helper-text"" id=""ccn-help""></span>
				</div>
				<!--Hosted Field for CC EXP-->
				<div class=""form-group col-xs-7"">
					<label for=""exp-date"">Exp. Date</label>
					<div class=""form-control"" id=""exp-date"" data-bluesnap=""exp""></div>
					<span class=""helper-text"" id=""exp-help""></span>
				</div>
				<!--Hosted Field for CC CVV-->
				<div cla");
                WriteLiteral(@"ss=""form-group col-xs-5"">
					<label for=""cvv"">Security Code</label>
					<div class=""form-control"" id=""cvv"" data-bluesnap=""cvv""></div>
					<span class=""helper-text"" id='cvv-help'></span>
				</div>
			</div>

			<a  class=""btn btn-success btn-lg col-xs-6 col-xs-offset-3"" type=""button"" id=""submit-button"" onclick=""do_when_clicking_submit_button()"">Pay Now</a>

		");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\t</div>\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
